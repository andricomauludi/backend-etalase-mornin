name: Deploy Gin Golang Application

on:
  push:
    branches:
      - main  # Replace with the branch you want to trigger deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_IMAGE }}

      - name: Deploy to VM
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Install SSH Client
          sudo apt-get update
          sudo apt-get install -y sshpass

          # Write the SSH private key to a file
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Deploy Docker container to VM
          ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USERNAME@$SSH_HOST << 'EOF'
            sudo docker pull ${{ secrets.DOCKER_IMAGE }}
            # Untuk Cabang 1
            sudo docker stop pos-backend-container || true
            sudo docker rm pos-backend-container || true
            sudo docker run -d \
              --name pos-backend-container \
              --network frontend-connect \
              -e DATABASE_USER=root \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}  \
              -e DATABASE_HOST='ip-db-cabang1' \
              -e DATABASE_NAME='posdatabase' \
              ${{ secrets.DOCKER_IMAGE }}

            # Untuk Cabang 2
            sudo docker stop pos-backend-cabang2-container || true
            sudo docker rm pos-backend-cabang2-container || true
            sudo docker run -d \
              --name pos-backend-cabang2-container \
              --network frontend-connect \
              -e DATABASE_USER=root \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}  \
              -e DATABASE_HOST='ip-db-cabang2' \
              -e DATABASE_NAME='posdatabase-cabang2' \
              ${{ secrets.DOCKER_IMAGE }}
          EOF
